apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app: webapp
spec:
  replicas: 1 # how many Pods you want to create
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: nanajanashia/k8s-demo-app:v1.0 #https://hub.docker.com/r/nanajanashia/k8s-demo-app/tags
        ports:
        - containerPort: 3000 # nodejs app the listens to port 3000
        env:
        - name: USER_NAME
          valueFrom:
            secretKeyRef: # tell to look the secret key in mongo-secret.yaml
              name: mongo-secret # this is defined in mongo-secret.yaml
              key: mongo-user # this is defined in mongo-secret.yaml
        - name: USER_PWD
          valueFrom:
            secretKeyRef: # tell to look the secret key in mongo-secret.yaml
              name: mongo-secret # this is defined in mongo-secret.yaml
              key: mongo-password # this is defined in mongo-secret.yaml
        - name: DB_URL
          valueFrom:
            configMapKeyRef: # tell to look the config in mongo-config.yaml
              name: mongo-config # this is defined in mongo-config.yaml
              key: mongo-url # this is defined in mongo-config.yaml
# separator, you can have multiple YAML configurations within 1 file
# Service Configuration File
---
apiVersion: v1
kind: Service #Service
metadata:
  name: webapp-service # Basic configuration for deployment and service for any application
spec:
  type: LoadBalancer #default - ClusterIP (internal service). Type NodePort is external service
  selector:
    app: webapp # should match on the deplyment label
  ports:
  - protocol: TCP
    port: 3000 # Service port. Can also be 80, 8080. Common standard to set the same as targetPort.
    targetPort: 3000 #should be the same as containerPort. Tells Service to which port to forward the request to the Pods.
    nodePort: 30100 # must be between range 30000 -32767
